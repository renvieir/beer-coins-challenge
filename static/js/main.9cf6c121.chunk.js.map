{"version":3,"sources":["components/AdminTable/AdminTable.tsx","pages/Rewards/components/ConfirmExchange.tsx","components/Card/Card.tsx","components/Carousel/CarouselComponent.tsx","components/ModalFooter/ModalFooter.tsx","components/ModalTransfer/ModalTransfer.tsx","services/TokenService.ts","AppContext.tsx","components/NavbarComponent/NavBarComponent.tsx","services/FormatDate.ts","components/EmptyTable/EmptyTable.tsx","components/OperationsTable/OperationsTable.tsx","components/Popover/ModalDeposito.tsx","components/Popover/Popover.tsx","pages/Rewards/components/HistoryRewards.tsx","components/Presentation/Presentation.tsx","components/ReceiptTable/ReceiptTable.tsx","components/RewardsHistoryTable/RewardsHistory.tsx","pages/Register/Register.tsx","pages/Admin/Admin.tsx","pages/Client/Client.tsx","pages/Login/Login.tsx","pages/Operations/Operations.tsx","pages/Receipt/Receipt.tsx","pages/Rewards/Rewards.tsx","pages/Error/Error.tsx","services/APIService.ts","services/AxiosHandler.ts","App.tsx","index.tsx","assets/images/logo.svg","assets/images/beer-tech-logo.png","assets/images/transfer.svg","assets/images/empty.svg","assets/images/admin.svg","assets/images/client.svg","assets/videos/tap-beer.mp4","assets/images/beer-image.jpg","assets/images/operations.svg","assets/images/receipt.svg","assets/images/rewards.svg","assets/images/404.svg"],"names":["AdminTable","tableTitle","useState","isLoading","setLoading","adminData","setAdminData","fetchTableData","useCallback","a","apiService","listaContas","data","console","error","toast","useEffect","className","Spinner","animation","role","Table","responsive","map","conta","index","key","hash","nome","email","cnpj","saldo","Popover","onCompleted","ConfirmExchange","handleShow","handleClose","show","productPrice","productTitle","Modal","onHide","Header","closeButton","Title","Form","Body","Button","variant","onClick","type","CardComponent","title","description","price","imageUrl","showExchangeModal","setShowExchangeModal","Card","style","width","Img","src","Subtitle","Text","CarouselComponent","history","useHistory","redirectToRewards","push","Carousel","indicators","Item","alt","Caption","ModalFooter","Navbar","Brand","href","logo","height","Toggle","Collapse","BeerTechLogo","ModalTransfer","validated","setValidated","valorRef","useRef","contaDestinoRef","handleTransfer","transferData","contaDestino","current","value","valor","transferencia","then","response","success","catch","noValidate","onSubmit","event","preventDefault","stopPropagation","form","currentTarget","checkValidity","FormGroup","Row","Col","justifyContent","padding","Label","fontSize","Control","required","placeholder","ref","Feedback","Image","transfer","Footer","TokenService","store","token","this","restoreToken","removeItem","setItem","getItem","jwt_decode","AppStateContext","createContext","user","Nome","Perfil","AppDispatchContext","reducer","state","action","AppContextProvider","children","useReducer","dispatch","Provider","context","id","displayName","useAppState","useContext","useAppDispatch","NavbarComponent","isAdmin","ButtonGroup","vertical","DropdownButton","as","Dropdown","eventKey","window","localStorage","clearToken","location","reload","FormatDate","operationDate","formatedDate","Date","getFormatedDay","getFormatedMonth","getFullYear","getFormatedHours","getFormatedMinutes","date","getDay","slice","getMonth","getHours","getMinutes","EmptyTable","emptyImage","OperationsTable","tableSize","isClientDashboard","operations","setOperations","emptyTable","setEmptyTable","loading","filters","page","pageSize","tipoOperacao","formatDate","extrato","operationsData","length","finally","size","striped","bordered","hover","operation","format","dataHora","nomeContaOrigemOuDestino","tipo","url","ModalDeposito","hashDaConta","nomeDestinatario","handleDeposito","deposita","depositoData","deposito","color","BeerPopover","setShow","HistoryRewards","RewardsHistory","Presentation","backToHome","isRewardsScreen","image","isModalVisible","setModalVisible","handleCloseModal","handleOpenModal","setSaldo","getSaldo","Jumbotron","Hash","ReceiptTableTable","receipt","RewardsHistoryTable","Register","userNameRef","userPasswordRef","userCNPJRef","userEmailRef","criaConta","createAccountObject","senha","Group","controlId","aria-hidden","Admin","imageContent","Client","contentImage","ReceiptTable","Login","setIsLoading","emailRef","passwordRef","notify","message","dark","info","muted","autoPlay","loop","videoSample","login","handleLogin","Operations","Receipt","Rewards","Error","APIService","apiAccess","password","AxiosHandler","baseURL","tokenService","instance","interceptor","axios","create","setInterceptor","getToken","setToken","resetToken","interceptors","use","isUnauthorized","status","isForbidden","eject","log","Promise","reject","defaults","headers","common","post","storeToken","decodeToken","get","content","operationFilter","process","REACT_APP_API_URL","App","appState","isLoggedIn","exact","path","to","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9cf6c121.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { toast } from 'react-toastify';\nimport { Spinner, Table } from \"react-bootstrap\"\n\nimport { IConta } from '../../interfaces/Conta'\nimport { Popover } from '../index'\nimport { apiService } from '../../App';\n\ninterface AdminTableProps {\n  tableTitle: string;\n}\n\nconst AdminTable = ({ tableTitle }: AdminTableProps) => {\n  const [isLoading, setLoading] = useState(true);\n  const [adminData, setAdminData] = useState<IConta[]>([]);\n\n  const fetchTableData = useCallback(async () => {\n    setLoading(true);\n    try {\n      const data = await apiService.listaContas();\n      setAdminData(data);\n    } catch (error) {\n      console.error(error);\n      toast.error('Ooops algo de errado não está certo. Tente novamente mais tarde');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchTableData();\n  }, [fetchTableData]);\n\n  return (\n    <>\n      {\n        isLoading ?\n          <div className=\"spinner-container\">\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          </div> :\n          <>\n            <h2>{tableTitle}</h2>\n            <Table responsive=\"sm\" className='text-align-center'>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Nome</th>\n                  <th>E-mail</th>\n                  <th>CNPJ</th>\n                  <th>Saldo</th>\n                  <th>Ações</th>\n                </tr>\n              </thead>\n              <tbody>\n                {adminData.map((conta: IConta, index: number) => (\n                  <tr key={conta.hash}>\n                    <td>{index + 1}</td>\n                    <td>{conta.nome}</td>\n                    <td>{conta.email}</td>\n                    <td>{conta.cnpj}</td>\n                    <td>{conta.saldo}</td>\n                    <td>\n                      <Popover hash={conta.hash} nome={conta.nome} onCompleted={fetchTableData} />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </>\n      }\n    </>\n  )\n};\n\nexport default AdminTable;","import React from 'react';\nimport { Button, Form, Modal } from \"react-bootstrap\"\nimport { ModalFooter } from \"../../../components/\"\nimport \"./style.scss\";\n\ninterface RegisterProps {\n  handleShow: () => void,\n  handleClose: () => void,\n  show: boolean,\n  productPrice: number,\n  productTitle: string\n}\n\nexport default function ConfirmExchange({ handleShow, handleClose, show, productPrice, productTitle }: RegisterProps) {\n\n  const handleCancel = () => {\n    handleClose()\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirmação de troca</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            {`Você confirma a troca de ${productPrice} pontos por uma ${productTitle}?`}\n          </Modal.Body>\n          <div className=\"exchange-modal-footer\">\n            <Button className=\"outline-button-cancel\" variant=\"link\" onClick={handleCancel}>Cancelar</Button>\n            <Button className=\"regular-button\" variant=\"warning\" type=\"submit\">Confirmar</Button>\n          </div>\n          <ModalFooter />\n        </Form>\n      </Modal>\n    </>\n  );\n}","import React, { useState } from 'react'\nimport { Button, Card } from 'react-bootstrap';\nimport ConfirmExchange from \"../../pages/Rewards/components/ConfirmExchange\"\nimport \"./style.scss\";\n\ninterface ICard {\n    title: string,\n    description: string,\n    price: number,\n    imageUrl: string,\n\n}\n\nconst CardComponent: React.FC<ICard> = ({ title, description, price, imageUrl }) => {\n    const [showExchangeModal, setShowExchangeModal] = useState<boolean>()\n    const handleShow = () => setShowExchangeModal(true)\n    const handleClose = () => setShowExchangeModal(false)\n    return (\n        <>\n            <Card style={{ width: '20rem' }}>\n                <Card.Img variant=\"top\" src={imageUrl} />\n                <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <Card.Subtitle>{description}</Card.Subtitle>\n                    <div className=\"card-bottom-wrapper\">\n                        <Card.Text className=\"product-price\">Valor: B$ {price}</Card.Text>\n                        <Button className=\"regular-button\" onClick={handleShow} variant=\"primary\">Resgatar</Button>\n                    </div>\n                </Card.Body>\n            </Card>\n            <ConfirmExchange productTitle={title} productPrice={price} show={!!showExchangeModal} handleShow={handleShow} handleClose={handleClose} />\n        </>\n    )\n}\n\nexport default CardComponent","import React from \"react\";\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport './style.scss';\n\nconst imageUrl = 'https://emporiodacerveja.vtexassets.com/arquivos/ids/178169-800-auto?width=800&height=auto&aspect=true'\n\nconst CarouselComponent = () => {\n\n    const history = useHistory();\n\n    const redirectToRewards = () => {\n        history.push('/rewards')\n    }\n\n    return (\n        <Carousel indicators={false}>\n            <Carousel.Item onClick={redirectToRewards} className=\"carousel-item\">\n                <img\n                    className=\"d-block w-100\"\n                    src={imageUrl}\n                    alt=\"First slide\"\n                />\n                <Carousel.Caption className=\"carousel-caption\">\n                    <p>Conheça nosso programa de pontos</p>\n                    <p><b>Beerwards</b></p>\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item onClick={redirectToRewards} className=\"carousel-item\">\n                <img\n                    className=\"d-block w-100\"\n                    src={imageUrl}\n                    alt=\"First slide\"\n                />\n                <Carousel.Caption className=\"carousel-caption\">\n                    <p>Conheça nosso programa de pontos</p>\n                    <p><b>Beerwards</b></p>\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item onClick={redirectToRewards} className=\"carousel-item\">\n                <img\n                    className=\"d-block w-100\"\n                    src={imageUrl}\n                    alt=\"First slide\"\n                />\n                <Carousel.Caption className=\"carousel-caption\">\n                    <p>Conheça nosso programa de pontos</p>\n                    <p><b>Beerwards</b></p>\n                </Carousel.Caption>\n            </Carousel.Item>\n        </Carousel >\n    )\n};\n\nexport default CarouselComponent; ","import React from \"react\";\nimport { Navbar } from 'react-bootstrap';\nimport logo from \"../../assets/images/logo.svg\"\nimport BeerTechLogo from \"../../assets/images/beer-tech-logo.png\";\nimport './style.scss';\n\n\nconst ModalFooter = () => {\n    return (\n        <Navbar className='footer-container'>\n            <Navbar.Brand href=\"#home\" className='footer-title'>\n                <div>\n                    <img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />{' '}\n                    <span className='footer-title-margin'>eer Coins</span>\n                    <p className='footer-description'>AB Inbev Virtual Wallet</p>\n                </div>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <img alt=\"beer-tech-logo\" src={BeerTechLogo} width=\"50\" height=\"50\" className=\"d-inline-block align-top footer-beer-tech-logo\"\n                />\n            </Navbar.Collapse>\n        </Navbar>\n    )\n};\n\nexport default ModalFooter; ","import React, { useState, useRef } from 'react'\nimport { Button, Form, Image, Modal, Col, FormGroup } from \"react-bootstrap\"\nimport { toast } from 'react-toastify';\nimport { ModalFooter } from '../index'\nimport transfer from \"../../assets/images/transfer.svg\"\nimport { apiService } from '../../App';\nimport './style.scss'\n\ninterface ModalTransferProps {\n    handleClose: () => void\n    show: boolean\n}\n\nfunction ModalTransfer({ handleClose, show }: ModalTransferProps) {\n    const [validated, setValidated] = useState(false);\n    const valorRef = useRef<HTMLInputElement | null>(null);\n    const contaDestinoRef = useRef<HTMLInputElement | null>(null);\n\n    const checkValidation = (event: any) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n\n        setValidated(true);\n        if (form.checkValidity()) {\n            handleTransfer()\n        }\n    }\n\n    const handleTransfer = () => {\n        const transferData = {\n            contaDestino: contaDestinoRef?.current?.value!,\n            valor: valorRef?.current?.value!\n        }\n        apiService.transferencia(transferData).then(response => {\n            toast.success('Transferência realizada com sucesso!');\n            handleClose();\n        }).catch(error => {\n            console.error('transferencia', error)\n            toast.error('Algo está errado!');\n        });\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header className=\"transferHeader\">\n                    <Modal.Title className=\"transferTitle\">Realizar Transferência</Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={checkValidation}>\n                    <Modal.Body >\n                        <FormGroup className=\"form-group-transfer\">\n                            <Form.Row className=\"transferForm\">\n                                <Col style={{ justifyContent: 'space-between', padding: '15px' }}>\n                                    <Form.Label style={{ fontSize: '15px' }}>Destinatário</Form.Label>\n                                    <Form.Control required type=\"text\" placeholder=\"Hash do destinatário\" ref={contaDestinoRef} />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Campo obrigatório\n                  </Form.Control.Feedback>\n                                </Col>\n                                <Col style={{ justifyContent: 'space-between', padding: '15px' }}>\n                                    <Form.Label style={{ fontSize: '15px' }}>Valor</Form.Label>\n                                    <Form.Control required type=\"text\" placeholder=\"B$\" ref={valorRef} />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        Campo obrigatório\n                </Form.Control.Feedback>\n                                </Col>\n                            </Form.Row>\n                            <Form.Row>\n                                <Col >\n                                    <Image className=\"TransferImage\" src={transfer} />\n                                </Col>\n                            </Form.Row>\n                        </FormGroup>\n                    </Modal.Body>\n                    <Modal.Footer style={{ justifyContent: 'space-between', padding: '0px' }}>\n                        <Button className=\"outline-button-cancel\" variant=\"link\" onClick={handleClose}>Cancelar</Button>\n                        <Button className=\"regular-button modal-transfer-button\" type=\"submit\" variant=\"warning\">Transferir</Button>\n                        <ModalFooter />\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalTransfer;","import jwt_decode from \"jwt-decode\";\nimport { ITokenService } from \"../interfaces/Token\";\n\nconst TOKEN_KEY = 'token'\n\nexport class TokenService implements ITokenService {\n  private token: string | null;\n\n  constructor(private store: Storage) {\n    this.token = this.restoreToken();\n    this.restoreToken();\n  }\n\n  getToken(): string | null {\n    return this.token;\n  }\n\n  clearToken() {\n    return this.store.removeItem(TOKEN_KEY);\n  }\n\n  storeToken(token: string) {\n    this.store.setItem(TOKEN_KEY, token)\n  }\n\n  private restoreToken(): string | null {\n    return this.store.getItem(TOKEN_KEY)\n  }\n\n  static decodeToken<T>(token: string): T {\n    return jwt_decode(token)\n  }\n}","import React, { useReducer, useContext, createContext } from 'react';\nimport { ITokenData } from './interfaces/Token';\nimport { ContextDevTool } from 'react-context-devtool';\n\nconst initialState = {\n  user: {\n    Nome:'',\n    Perfil: ''\n  }\n}\n\nconst AppStateContext = createContext<IAppState>(initialState)\nconst AppDispatchContext = createContext<any[]>([])\n\nexport interface IAppState {\n  user: ITokenData\n}\n\nexport const SET_USER = 'SET_USER'\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case SET_USER:\n      return { user: action.user }\n    }\n  return state\n}\n\nexport const AppContextProvider = ({ children }: { children: any}) => {\n  const [state, dispatch] = useReducer(reducer, 0)\n  return (\n    <AppDispatchContext.Provider value={[dispatch]}>\n      <AppStateContext.Provider value={state}>\n        {children}\n        <ContextDevTool context={AppStateContext} id=\"beerCoinsContext\" displayName=\"BeerCoins Context\" />\n      </AppStateContext.Provider>\n    </AppDispatchContext.Provider>\n  )\n}\n\nexport const useAppState = () => useContext<IAppState>(AppStateContext)\nexport const useAppDispatch = () => useContext(AppDispatchContext)","import React from \"react\";\nimport { Navbar, ButtonGroup, DropdownButton, Dropdown } from 'react-bootstrap';\nimport logo from \"../../assets/images/logo.svg\";\nimport BeerTechLogo from \"../../assets/images/beer-tech-logo.png\";\nimport { TokenService } from \"../../services/TokenService\"\nimport { useHistory } from 'react-router-dom';\nimport { useAppState } from '../../AppContext';\nimport './style.scss';\n\nconst NavbarComponent = () => {\n    const history = useHistory();\n\n    const handleRedirect = () => {\n        history.push('/rewards')\n    }\n\n    const handleLogout = () => {\n        const tokenService = new TokenService(window.localStorage);\n        tokenService.clearToken();\n        history.push('/login');\n        window.location.reload()\n    }\n    const { user } = useAppState()\n    const isAdmin = user.Perfil === \"ROLE_ADMIN\"\n    return (\n        <Navbar className='navbar-container'>\n            <Navbar.Brand href=\"/\" className='navbar-title'>\n                <div>\n                    <img alt=\"\" src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />{' '}\n                    <span className='navbar-title-margin'>eer Coins</span>\n                    <p className='navbar-description'>AB Inbev Virtual Wallet</p>\n                </div>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-end\">\n                <img alt=\"\" src={BeerTechLogo} width=\"50\" height=\"50\" className=\"d-inline-block align-top navbar-beer-tech-logo\" />\n                <Navbar.Text className='beer-tech-logo-margin'>\n                    <ButtonGroup vertical>\n                        <DropdownButton as={ButtonGroup} title={user.Nome} id=\"bg-vertical-dropdown-3\">\n                            {!isAdmin && <Dropdown.Item onClick={handleRedirect} eventKey=\"1\">Beerwards</Dropdown.Item>}\n                            <Dropdown.Item onClick={handleLogout} eventKey=\"1\">Logout</Dropdown.Item>                      </DropdownButton>\n                    </ButtonGroup>\n                </Navbar.Text>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n};\n\nexport default NavbarComponent; ","export default class FormatDate {\n\n    format(operationDate: string) {\n        const formatedDate = new Date(operationDate)\n        return `${this.getFormatedDay(formatedDate)}/${this.getFormatedMonth(formatedDate)}/${formatedDate.getFullYear()} ${this.getFormatedHours(formatedDate)}:${this.getFormatedMinutes(formatedDate)}`\n    }\n    \n    getFormatedDay(date: Date) {\n        return `0${date.getDay()}`.slice(-2)\n    }\n\n    getFormatedMonth(date: Date) {\n        return `0${date.getMonth()}`.slice(-2)\n    }\n\n    getFormatedHours(date: Date) {\n        return `0${date.getHours()}`.slice(-2)\n    }\n\n    getFormatedMinutes(date: Date) {\n        return `0${date.getMinutes()}`.slice(-2)\n    }\n  \n}","import React from \"react\";\nimport { Image } from 'react-bootstrap';\nimport emptyImage from '../../assets/images/empty.svg';\n\nimport './style.scss';\n\nconst EmptyTable = () => {\n    return (\n        <div className='justify-content-center empty-table-container'>\n            <Image className='empty-image' src={emptyImage} />\n            <span className='empty-table-text'>AINDA NÃO HÁ LANÇAMENTOS NA SUA CONTA</span>\n        </div>\n    )\n};\n\nexport default EmptyTable; ","import React, { useEffect, useState } from \"react\";\nimport {\n    Table,\n    Button,\n    Spinner\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { IExtrato, IExtratoForm } from '../../interfaces/Extrato';\nimport { apiService } from '../../App';\nimport FormatDate from '../../services/FormatDate';\nimport EmptyTable from '../EmptyTable/EmptyTable';\n\ninterface OperationsTableProps {\n    tableSize?: number;\n    isClientDashboard?: boolean;\n}\n\nconst OperationsTable = ({ tableSize = 10, isClientDashboard }: OperationsTableProps) => {\n\n    const [operations, setOperations] = useState<IExtrato[]>([]);\n    const [emptyTable, setEmptyTable] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const filters: IExtratoForm = { page: 0, pageSize: tableSize, tipoOperacao: '' };\n    const formatDate = new FormatDate();\n\n    const history = useHistory();\n    const handleRedirect = (url: string) => {\n        history.push(`/${url}`)\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        apiService.extrato(filters).then((operationsData: IExtrato[]) => {\n            setOperations(operationsData)\n            if (operationsData.length > 0) {\n                setEmptyTable(false)\n            }\n        }).finally(() => setLoading(false))\n    }, [])\n\n    const renderTable = (() => {\n        return (\n            <>\n                <Table striped bordered hover className='text-align-left'>\n                    <thead>\n                        <tr>\n                            <th>Data</th>\n                            <th>Beneficiário</th>\n                            <th>Valor</th>\n                            <th>Tipo</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {operations.map((operation: IExtrato, index) => (\n                            <tr key={index}>\n                                <td>{formatDate.format(operation.dataHora)}</td>\n                                <td>{operation.nomeContaOrigemOuDestino}</td>\n                                <td>B$ {operation.valor}</td>\n                                <td>{operation.tipo}</td>\n                            </tr>\n                        )\n                        )}\n                    </tbody>\n                </Table>\n                { isClientDashboard ? <Button className='regular-outline-button' variant=\"outline-warning\" onClick={() => handleRedirect('operations')}>Ver extrato completo</Button> : null}\n            </>\n        )\n    })\n\n    return (\n        <>\n            { loading ? <Spinner className=\"spinner-tables\" animation='border' variant=\"secondary\" size=\"sm\" /> : emptyTable ? <EmptyTable /> : renderTable()}\n        </>\n    )\n};\n\nexport default OperationsTable;","import React, { useState, useRef } from 'react'\nimport { Button, Form, Row, Modal, Col, FormGroup } from \"react-bootstrap\"\nimport { toast } from 'react-toastify';\nimport ModalFooter from '../ModalFooter/ModalFooter'\nimport './style.scss'\nimport { apiService } from '../../App';\n\ninterface ModalTransferProps {\n    handleClose: () => void\n    show: boolean,\n    hashDaConta: string,\n    nomeDestinatario: string,\n    onCompleted: () => void\n}\n\nfunction ModalDeposito({ handleClose, show, hashDaConta, nomeDestinatario, onCompleted }: ModalTransferProps) {\n    const [validated, setValidated] = useState(false);\n    const valorRef = useRef<HTMLInputElement | null>(null);\n\n\n    const handleDeposito = (event: any) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.checkValidity()) {\n            deposita();\n        }\n        setValidated(true);\n    };\n\n    const deposita = () => {\n        const depositoData = {\n            hashDaConta,\n            valor: valorRef?.current?.value!\n        }\n        apiService.deposito(depositoData).then(response => {\n            toast.success('Depósito realizado com sucesso!');\n            onCompleted();\n        }).catch(error => { console.error('deposito', error) });\n    }\n\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header className=\"transferHeader\">\n                    <Modal.Title className=\"transferTitle\">Realizar depósito</Modal.Title>\n                </Modal.Header>\n                <Form noValidate validated={validated} onSubmit={handleDeposito}>\n                    <Modal.Body style={{ justifyContent: 'space-between' }}>\n                        <h5>Confirma o destinatário do depósito?</h5>\n                        <Row >\n                            <Col style={{ justifyContent: 'space-between' }}>\n                                <Form.Label>{`Nome: ${nomeDestinatario} | hash: `}\n                                    <Form.Label style={{ color: 'gray', fontSize: '15px' }}>{hashDaConta}</Form.Label>\n                                </Form.Label>\n                            </Col>\n                        </Row>\n                        <FormGroup className=\"form-group-transfer\">\n                            <Form.Row>\n                                <Form.Label style={{ fontSize: '15px' }}>Valor</Form.Label>\n                                <Form.Control required type=\"text\" placeholder=\"B$\" ref={valorRef} />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Por favor, preencha o valor do depósito\n                                </Form.Control.Feedback>\n                            </Form.Row>\n                        </FormGroup>\n                    </Modal.Body>\n                    <Modal.Footer style={{ justifyContent: 'space-between', padding: '0px' }}>\n                        <Button className=\"outline-button-cancel\" variant=\"link\" onClick={handleClose}>Cancelar</Button>\n                        <Button className=\"regular-button modal-transfer-button\" variant=\"warning\" onClick={handleDeposito}>Depositar</Button>\n                        <ModalFooter />\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalDeposito;","import React, { useState, } from 'react';\nimport { Button, } from \"react-bootstrap\";\nimport ModalDeposito from \"./ModalDeposito\"\nimport './style.scss';\n\ninterface BeerPopoverProps {\n  hash: string,\n  nome: string,\n  onCompleted: () => void\n}\n\nfunction BeerPopover({ nome, hash: hashDaConta, onCompleted }: BeerPopoverProps) {\n  const [show, setShow] = useState(false);\n  const openPopover = () => { setShow(true); };\n  const closePopover = () => { setShow(false); };\n  return (\n    <>\n      <Button onClick={openPopover} variant=\"link\">Depósito</Button>\n      <ModalDeposito hashDaConta={hashDaConta} nomeDestinatario={nome} show={show} handleClose={closePopover} onCompleted={onCompleted} />\n    </>\n  );\n}\n\n\nexport default BeerPopover;","import React from 'react';\nimport { Button, Form, Modal } from \"react-bootstrap\"\nimport { ModalFooter, RewardsHistoryTable } from \"../../../components/\"\nimport \"./style.scss\";\n\n\ninterface RegisterProps {\n    handleShow: () => void,\n    handleClose: () => void,\n    show: boolean,\n}\n\nexport default function HistoryRewards({ handleShow, handleClose, show }: RegisterProps) {\n\n    const handleCancel = () => {\n        handleClose()\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Histórico de trocas</Modal.Title>\n                </Modal.Header>\n                <Form>\n                    <Modal.Body>\n                        <RewardsHistoryTable />\n                    </Modal.Body>\n                    <div className=\"history-modal-footer\">\n                        <Button className=\"outline-button-cancel\" variant=\"link\" onClick={handleCancel}>Fechar</Button>\n                    </div>\n                    <ModalFooter />\n                </Form>\n            </Modal>\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Button,\n  Row,\n  Col,\n  Spinner,\n  Image\n} from 'react-bootstrap';\nimport './style.scss'\nimport ModalTransfer from '../ModalTransfer/'\nimport HistoryRewards from '../../pages/Rewards/components/HistoryRewards'\nimport { apiService } from \"../../App\";\nimport { useAppState } from '../../AppContext';\n\ninterface PresentationProps {\n  title: string;\n  backToHome?: boolean;\n  isRewardsScreen?: boolean,\n  image: string;\n}\n\nconst Presentation = ({ title, backToHome, isRewardsScreen, image }: PresentationProps) => {\n  const { user } = useAppState()\n  const { Perfil: userPerfil } = user\n  const isAdmin = userPerfil === 'ROLE_ADMIN'\n  const [isModalVisible, setModalVisible] = useState(false);\n  const handleCloseModal = () => setModalVisible(false);\n  const handleOpenModal = () => setModalVisible(true);\n\n  const [saldo, setSaldo] = useState(0)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true);\n    apiService.getSaldo().then(({ saldo }) => {\n      setSaldo(saldo);\n    }).finally(() => setLoading(false))\n  }, [])\n\n  return (\n    <Jumbotron className='presentation-container'>\n      <Row>\n        <Col>\n          <h1 className='presentation-title'>{title}</h1>\n          <Row>\n            <Col className='align-left'>\n              {!isAdmin && <p className='presentation-subtitle'>Saldo em conta: {loading ? <Spinner className=\"spinner-saldo\" animation='border' variant=\"secondary\" size=\"sm\" /> : ` B$ ${saldo}`}</p>}              <p className=\"presentation-hash\">{`seu hash: ${user.Hash}`} </p>\n            </Col>\n            {\n              !isRewardsScreen ?\n                <Col className='align-center'>\n                  {!isAdmin && <p><Button className='regular-button' variant=\"warning\" onClick={handleOpenModal}>Transferir</Button></p>}\n                  {backToHome && <p><Button className='regular-outline-button voltar-transf' variant=\"outline-warning\" href=\"/\">Voltar</Button></p>}\n                </Col>\n                :\n                <Col className='align-center'>\n                  <p><Button className='regular-button' variant=\"warning\" onClick={handleOpenModal}>Ver histórico</Button></p>\n                  <p><Button className='regular-outline-button voltar' variant=\"outline-warning\" href=\"/\">Voltar</Button></p>\n                </Col>\n            }\n          </Row>\n        </Col>\n        <Col className='align-center'>\n          <Image className='presentation-image' src={image} />\n        </Col>\n      </Row>\n      {\n        isRewardsScreen ?\n          <HistoryRewards handleClose={handleCloseModal} handleShow={handleOpenModal} show={isModalVisible} />\n          :\n          <ModalTransfer handleClose={handleCloseModal} show={isModalVisible} />\n      }\n    </Jumbotron>\n  );\n};\n\nexport default Presentation;\n\n\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Table,\n    Button,\n    Spinner\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { IExtrato, IExtratoForm } from '../../interfaces/Extrato';\nimport { apiService } from '../../App';\nimport FormatDate from '../../services/FormatDate';\nimport EmptyTable from '../EmptyTable'\n\ninterface ReceiptTableProps {\n    tableSize?: number;\n    isClientDashboard?: boolean;\n}\n\nconst ReceiptTableTable = ({ tableSize = 10, isClientDashboard }: ReceiptTableProps) => {\n\n    const [operations, setOperations] = useState<IExtrato[]>([]);\n    const [emptyTable, setEmptyTable] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const filters: IExtratoForm = { page: 0, pageSize: tableSize, tipoOperacao: 'DEPOSITO' }\n    const formatDate = new FormatDate()\n\n    const history = useHistory();\n    const handleRedirect = (url: string) => {\n        history.push(`/${url}`)\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        apiService.extrato(filters).then((operationsData: IExtrato[]) => {\n            setOperations(operationsData)\n            if (operationsData.length > 0) {\n                setEmptyTable(false)\n            }\n        }).finally(() => setLoading(false))\n    }, [])\n\n    const renderTable = (() => {\n        return (\n            <>\n                <Table striped bordered hover className='text-align-left'>\n                    <thead>\n                        <tr>\n                            <th>Data</th>\n                            <th>Valor</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {operations.map((receipt: IExtrato, index) => (\n                            <tr key={index}>\n                                <td>{formatDate.format(receipt.dataHora)}</td>\n                                <td>B$ {receipt.valor}</td>\n                            </tr>\n                        )\n                        )}\n                    </tbody>\n                </Table>\n                { isClientDashboard ? <Button className='regular-outline-button' variant=\"outline-warning\" onClick={() => handleRedirect('receipt')}>Ver todos os lançamentos</Button> : null}\n            </>\n        )\n    })\n\n    return (\n        <>\n            { loading ? <Spinner className=\"spinner-tables\" animation='border' variant=\"secondary\" size=\"sm\" /> : emptyTable ? <EmptyTable /> : renderTable()}\n        </>\n    )\n};\n\nexport default ReceiptTableTable;","import React, { useEffect, useState } from \"react\";\nimport {\n    Table,\n    Spinner\n} from 'react-bootstrap';\nimport { IExtrato, IExtratoForm } from '../../interfaces/Extrato';\nimport { apiService } from '../../App';\n\ninterface ReceiptTableProps {\n    tableSize?: number;\n}\n\nconst RewardsHistoryTable = ({ tableSize = 10 }: ReceiptTableProps) => {\n\n    const [operations, setOperations] = useState<IExtrato[]>([]);\n    const [loading, setLoading] = useState(false);\n    const filters: IExtratoForm = { page: 0, pageSize: tableSize, tipoOperacao: 'DEPOSITO' }\n\n    useEffect(() => {\n        setLoading(true);\n        apiService.extrato(filters).then((operationsData: IExtrato[]) => {\n            setOperations(operationsData)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    const renderTable = (() => {\n        return (\n            <>\n                <Table striped bordered hover className='text-align-left'>\n                    <thead>\n                        <tr>\n                            <th>Valor</th>\n                            <th>Data</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {operations.map((receipt: IExtrato) => (\n                            <tr>\n                                <td>{receipt.dataHora}</td>\n                                <td>B$ {receipt.valor}</td>\n                            </tr>\n                        )\n                        )}\n                    </tbody>\n                </Table>\n            </>\n        )   \n    })\n\n    return (\n        <>\n            { loading ? <Spinner className=\"spinner-tables\" animation='border' variant=\"secondary\" size=\"sm\" /> : renderTable() }\n        </>\n    )\n};\n\nexport default RewardsHistoryTable;","import React, { useState, useRef } from 'react';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Modal, Spinner } from \"react-bootstrap\"\n\nimport { ModalFooter } from \"../../components/\"\nimport { apiService } from '../../App';\n\nimport './style.scss'\n\ninterface RegisterProps {\n  handleClose: () => void,\n  show: boolean\n}\n\nexport default function Register({ handleClose, show }: RegisterProps) {\n  const [validated, setValidated] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  const userNameRef = useRef<HTMLInputElement | null>(null)\n  const userPasswordRef = useRef<HTMLInputElement | null>(null)\n  const userCNPJRef = useRef<HTMLInputElement | null>(null)\n  const userEmailRef = useRef<HTMLInputElement | null>(null)\n\n\n  const handleRegister = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (form.checkValidity()) {\n      criaConta();\n    }\n    setValidated(true);\n  }\n\n  const criaConta = () => {\n    setLoading(true);\n    const createAccountObject = {\n      cnpj: userCNPJRef?.current?.value!,\n      email: userEmailRef?.current?.value!,\n      nome: userNameRef?.current?.value!,\n      senha: userPasswordRef?.current?.value!\n    }\n    apiService.criaConta(createAccountObject)\n      .then(response => {\n        setLoading(false);\n        handleClose();\n        window.location.reload();\n      }).catch(error => {\n        setLoading(false);\n        toast.error('Ooops algo de errado não está certo. Tente novamente mais tarde');\n      });\n  }\n\n  return (\n    <>\n      <Modal show={show} onHide={() => { !loading && handleClose(); }}>\n        <Modal.Header closeButton>\n          <Modal.Title>Criar conta</Modal.Title>\n        </Modal.Header>\n        <Form noValidate validated={validated} onSubmit={handleRegister}>\n          <Modal.Body>\n            <Form.Group controlId=\"validationCustom01\" >\n              <Form.Label>Nome completo</Form.Label>\n              <Form.Control type=\"text\" required placeholder=\"Digite seu nome\" ref={userNameRef} />\n              <Form.Control.Feedback type=\"invalid\">\n                Campo obrigatório\n            </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"validationCustom02\" >\n              <Form.Label>Endereço de e-mail</Form.Label>\n              <Form.Control type=\"email\" required placeholder=\"Digite seu e-mail\" ref={userEmailRef} />\n              <Form.Control.Feedback type=\"invalid\">\n                Campo obrigatório\n            </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"validationCustom03\" >\n              <Form.Label>CNPJ</Form.Label>\n              <Form.Control type=\"text\" required placeholder=\"22.724.645/0001-00\" ref={userCNPJRef} />\n              <Form.Control.Feedback type=\"invalid\">\n                Campo obrigatório\n            </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"validationCustom04\" >\n              <Form.Label>Senha</Form.Label>\n              <Form.Control type=\"password\" required placeholder=\"Digite uma senha\" ref={userPasswordRef} />\n              <Form.Control.Feedback type=\"invalid\">\n                Campo obrigatório\n            </Form.Control.Feedback>\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer style={{ justifyContent: 'space-between' }}>\n            <Button className=\"outline-button-cancel\" variant=\"link\" onClick={handleClose}>Cancelar</Button>\n            <Button className=\"regular-button cadastrar-button\" variant=\"warning\" type=\"submit\">\n              {loading ?\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                /> : 'Cadastrar'}\n            </Button>\n            <ModalFooter />\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  );\n}","import React, { useState } from \"react\";\nimport { Button } from \"react-bootstrap\"\n\nimport { AdminTable, NavbarComponent, Presentation } from '../../components'\nimport Register from \"../Register\";\n\nimport imageContent from \"../../assets/images/admin.svg\"\nimport \"./style.scss\"\n\nexport default function Admin() {\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const handleCloseModal = () => setModalVisible(false);\n  const handleOpenModal = () => setModalVisible(true);\n\n  return (\n    <>\n      <NavbarComponent />\n      <Presentation title={'BeerCoins | Administrador'} image={imageContent} />\n\n      <section className=\"contas-wrapper\">\n        <Button onClick={handleOpenModal} className=\"regular-button criar-conta-btn\" type=\"button\" variant=\"warning\">Criar Conta</Button>\n        <AdminTable tableTitle='Contas' />\n      </section>\n      <Register handleClose={handleCloseModal} show={isModalVisible} />\n    </>\n  )\n}\n\n\n\n\n","import React from 'react';\nimport { OperationsTable, ReceiptTable, Presentation, Carousel, NavbarComponent } from '../../components';\nimport { Row, Col } from 'react-bootstrap';\nimport { useAppState } from '../../AppContext';\nimport contentImage from '../../assets/images/client.svg';\nimport './style.scss';\n\nexport default function Client() {\n  const { user } = useAppState();\n\n  return (\n    <>\n      <NavbarComponent />\n      <Presentation title={`Olá, ${user.Nome}`} image={contentImage} />\n      <Row className='client-container'>\n        <Col>\n          <Row className=\"justify-content-center resumed-table\">\n            <Col>\n              <Row className=\"justify-content-center\">\n                <h2>Últimos lançamentos</h2>\n              </Row>\n              <Row className=\"justify-content-center\">\n                <ReceiptTable tableSize={3} isClientDashboard />\n              </Row>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center resumed-table\">\n            <Col>\n              <Row className=\"justify-content-center\">\n                <h2>Resumo do Extrato</h2>\n              </Row>\n              <Row className=\"justify-content-center\">\n                <OperationsTable tableSize={3} isClientDashboard />\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col className='rewards-preview-container'>\n          <div className='rewards-preview'>\n            <Carousel />\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}","import React, { useState, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport videoSample from \"../../assets/videos/tap-beer.mp4\";\nimport { Button, Form, Spinner } from \"react-bootstrap\"\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport imageContent from \"../../assets/images/beer-image.jpg\"\n\nimport \"./style.scss\"\n\nimport { apiService } from '../../App';\nimport { useAppDispatch } from '../../AppContext';\n\nexport default function Login() {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [validated, setValidated] = useState(false);\n\n  const emailRef = useRef<HTMLInputElement | null>(null)\n  const passwordRef = useRef<HTMLInputElement | null>(null)\n\n  const history = useHistory();\n  const [dispatch] = useAppDispatch();\n  const notify = (type: string) => {\n    let message;\n    switch (type) {\n      case 'loading': message = 'Aguarde...'; toast.dark(message); break;\n      case 'success': message = 'Login realizado com sucesso!'; toast.success(message); break\n      case 'failed': message = 'Oops... credenciais incorretas'; toast.error(message); break\n      case 'default': message = 'Algo está errado'; toast.info(message)\n    }\n  }\n\n  const checkValidation = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n\n    setValidated(true);\n    if (form.checkValidity()) {\n      handleLogin()\n      setIsLoading(true)\n    }\n\n\n  }\n\n  function handleLogin() {\n    apiService.login(emailRef?.current?.value!, passwordRef?.current?.value!)\n      .then((user) => {\n        dispatch({\n          type: 'SET_USER',\n          user\n        })\n        notify('success');\n        history.push('/')\n      })\n      .catch(() => {\n        notify('failed');\n        setIsLoading(false)\n\n      })\n  }\n\n  return (\n    <div className=\"main-wrapper-login\">\n      <video muted autoPlay loop id=\"Opening beer video\" className=\"welcome-video\">\n        <source src={videoSample} type=\"video/mp4\" />\n        <img alt='Beer iamge' src={imageContent} title=\"Your browser does not support the <video> tag\" />\n      </video>\n\n      <div className=\"login-form\">\n        <Form noValidate validated={validated} onSubmit={checkValidation}>\n          <h2 className=\"text-left\">\n            BeerCoins | Entrar\n          </h2>\n          <Form.Group className=\"text-left\" controlId=\"validationCustom01\">\n            <Form.Label>E-mail</Form.Label>\n            <Form.Control type=\"email\" required placeholder=\"Digite seu e-mail\" ref={emailRef} />\n            <Form.Control.Feedback type=\"invalid\">\n              Por favor, digite um e-mail válido\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className=\"text-left\" controlId=\"validationCustom02\">\n            <Form.Label>Senha</Form.Label>\n            <Form.Control type=\"password\" required placeholder=\"Digite sua senha\" ref={passwordRef} />\n            <Form.Control.Feedback type=\"invalid\">\n              Por favor, digite sua senha\n            </Form.Control.Feedback>\n          </Form.Group>\n          <div className=\"login-action-wrapper\">\n            <Button className=\"regular-button login-btn\" type=\"submit\" variant=\"warning\">{isLoading ? <Spinner animation=\"border\" /> : 'Entrar'}</Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { NavbarComponent, OperationsTable, Presentation } from '../../components/';\nimport contentImage from '../../assets/images/operations.svg';\n\nexport default function Operations() {\n\n  return (\n    <>\n      <NavbarComponent />\n      <Presentation title=\"Extrato completo\" backToHome image={contentImage} />\n      <div className=\"justify-content-center completed-table-container\">\n        <OperationsTable />\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport { ReceiptTable, NavbarComponent, Presentation } from '../../components/';\nimport contentImage from '../../assets/images/receipt.svg';\n\nexport default function Receipt() {\n  return (\n    <>\n      <NavbarComponent />\n      <Presentation title=\"Todos meus lançamentos\" backToHome image={contentImage} />\n      <div className=\"justify-content-center completed-table-container\">\n        <ReceiptTable />\n      </div>\n    </>\n  )\n\n}","import React from 'react';\nimport {\n    Row,\n    Col,\n} from 'react-bootstrap';\nimport { Card, Presentation, NavbarComponent } from '../../components/';\nimport contentImage from '../../assets/images/rewards.svg';\n\nimport './style.scss';\n\nconst imageUrl = 'https://emporiodacerveja.vtexassets.com/arquivos/ids/178169-800-auto?width=800&height=auto&aspect=true'\n\nexport default function Rewards() {\n\n    return (\n        <>\n            <NavbarComponent />\n            <Presentation isRewardsScreen={true} title=\"Beerwards\" image={contentImage} />\n            <Row className='client-container'>\n                <Col>\n                    <Card title='Colorado do Leme ao Pontal' price={9020} description=' A refrescancia já é uma caracteristica do estilo Summer Ale' imageUrl={imageUrl} />\n                </Col>\n                <Col>\n                    <Card title='Colorado do Leme ao Pontal' price={9020} description=' A refrescancia já é uma caracteristica do estilo Summer Ale' imageUrl={imageUrl} />\n                </Col>\n                <Col>\n                    <Card title='Colorado do Leme ao Pontal' price={9020} description=' A refrescancia já é uma caracteristica do estilo Summer Ale' imageUrl={imageUrl} />\n                </Col>\n            </Row>\n        </>\n    )\n}","import React from 'react';\nimport {\n    Image,\n    Button\n} from 'react-bootstrap';\nimport contentImage from '../../assets/images/404.svg'\nimport './style.scss'\n\nexport default function Error() {\n  return (\n    <div className=\"justify-content-center error-container\">\n      <h1>Não foi possível encontrar essa página.</h1>\n      <Image className='error-image' src={contentImage} />\n      <p><Button className='error-back-button' variant=\"warning\" href=\"/\">Voltar</Button></p>\n    </div>\n  )\n}","import { AxiosResponse } from \"axios\";\nimport { IConta, IFormConta, IFormContaResponse } from \"../interfaces/Conta\";\nimport { IDepositoForm } from \"../interfaces/Deposito\";\nimport { IExtrato, IExtratoForm } from \"../interfaces/Extrato\";\nimport IAPIHandler from \"../interfaces/IAPIHandler\";\nimport { ISaldo } from \"../interfaces/Saldo\";\nimport { ITokenData } from \"../interfaces/Token\";\nimport { ITransferenciaForm } from '../interfaces/Transferencia';\n\n\n\nexport default class APIService {\n  constructor(\n    public apiAccess: IAPIHandler\n  ) { }\n\n  login(email: string, password: string): Promise<ITokenData> {\n    return this.apiAccess.login(email, password);\n  }\n\n  listaContas(): Promise<IConta[]> {\n    return this.apiAccess.listaContas();\n  }\n\n  extrato(filters: IExtratoForm): Promise<IExtrato[]> {\n    return this.apiAccess.extrato(filters);\n  }\n\n  criaConta(conta: IFormConta): Promise<IFormContaResponse> {\n    return this.apiAccess.criaConta(conta);\n  }\n\n  deposito(form: IDepositoForm): Promise<AxiosResponse> {\n    return this.apiAccess.deposito(form);\n  }\n\n  transferencia(form: ITransferenciaForm): Promise<AxiosResponse>{\n    return this.apiAccess.transferencia(form);\n  }\n \n  getSaldo(): Promise<ISaldo> {\n    return this.apiAccess.getSaldo();\n  }\n}","import axios, { AxiosError, AxiosInstance, AxiosResponse } from \"axios\";\nimport IAPIHandler from \"../interfaces/IAPIHandler\";\nimport { IToken, ITokenData, ITokenService } from \"../interfaces/Token\";\nimport { IConta, IContaResponse, IFormConta, IFormContaResponse } from \"../interfaces/Conta\";\nimport { TokenService } from \"./TokenService\";\nimport { IDepositoForm } from \"../interfaces/Deposito\";\nimport { ITransferenciaForm } from \"../interfaces/Transferencia\";\nimport { IExtratoForm, IExtrato, IExtratoResponse } from \"../interfaces/Extrato\";\nimport { ISaldo } from \"../interfaces/Saldo\";\n\nexport default class AxiosHandler implements IAPIHandler {\n  private instance: AxiosInstance;\n  private interceptor: any;\n\n  constructor(baseURL: string, private tokenService: ITokenService) {\n    this.instance = axios.create({baseURL});\n    this.setInterceptor();\n    const token = this.tokenService.getToken();\n    if (token) this.setToken(token);\n    else this.resetToken();\n  }\n\n  setInterceptor() {\n    const clearInterceptor = () => {\n      if (this.interceptor) {\n        this.instance.interceptors.response.eject(this.interceptor);\n      }\n      this.interceptor = null;\n    }\n\n    this.interceptor = this.instance.interceptors.response.use(\n      response => response,\n      (error: AxiosError) => {\n        const isUnauthorized = error.response && error.response.status === 401;\n        const isForbidden = error.response && error.response.status === 403;\n\n        if (isUnauthorized || isForbidden) {\n          clearInterceptor();\n          this.resetToken();\n          console.log('unauthorized');\n          window.location.reload();\n        }\n\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  setToken(token: string) {\n    this.instance.defaults.headers.common = { 'Authorization': `Bearer ${token}` };\n  }\n\n  resetToken(): void {\n    delete this.instance.defaults.headers.common[\"Authorization\"];\n    this.tokenService.clearToken();\n  }\n\n  async login(email: string, password: string): Promise<ITokenData> {\n    const { data } = await this.instance.post<IToken>('/login', { email, password });\n    const { token } = data;\n\n    this.setToken(token);\n    this.tokenService.storeToken(token);\n    return TokenService.decodeToken<ITokenData>(token);\n  }\n\n  async listaContas(page: number = 0, pageSize: number = 10): Promise<IConta[]> {\n    const { data } = await this.instance.get<IContaResponse>(`/conta?page=${page}&size=${pageSize}`);\n    return data.content;\n  }\n\n  async extrato(filters: IExtratoForm): Promise<IExtrato[]> {\n    let operationFilter = '';\n    if(filters.tipoOperacao) {\n      operationFilter = `&tipoOperacao=${filters.tipoOperacao}`\n    }\n    const { data } = await this.instance.get<IExtratoResponse>(`/conta/extrato?page=${filters.page}&size=${filters.pageSize}${operationFilter}`);\n    return data.content;\n  }\n\n  async criaConta(conta: IFormConta): Promise<IFormContaResponse> {\n    const { data } = await this.instance.post<IFormContaResponse>(`/conta`, conta);\n    return data;\n  }\n\n  async getSaldo(): Promise<ISaldo> {\n    const { data } = await this.instance.get<ISaldo>(`/conta/saldo`);\n    return data;\n  }\n\n  transferencia(form: ITransferenciaForm): Promise<AxiosResponse> {\n    return this.instance.post(`/conta/transferencia`, form);\n  }\n\n  deposito(form: IDepositoForm): Promise<AxiosResponse> {\n    return this.instance.post(`/conta/deposito`, form);\n  }\n\n}","\nimport React, { useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport \"./App.scss\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Admin from './pages/Admin/Admin';\nimport Client from './pages/Client';\nimport Login from './pages/Login';\nimport Operations from './pages/Operations';\nimport Receipt from './pages/Receipt';\nimport Rewards from './pages/Rewards'\nimport Error from './pages/Error/Error';\n\n\nimport APIService from './services/APIService'\nimport AxiosHandler from './services/AxiosHandler'\nimport { useAppDispatch, useAppState, SET_USER } from './AppContext';\nimport { TokenService } from './services/TokenService';\nimport { ITokenData } from './interfaces/Token';\n\nconst tokenService = new TokenService(window.localStorage);\nconst apiUrl = process.env.REACT_APP_API_URL || 'https://beertech-banco.herokuapp.com/beercoins';\nconst axiosHandler = new AxiosHandler(apiUrl, tokenService)\nexport const apiService = new APIService(axiosHandler)\n\nfunction App() {\n  const appState = useAppState();\n  const [dispatch] = useAppDispatch();\n\n  const isLoggedIn = appState && !!appState.user.Nome;\n  const isAdmin = isLoggedIn && appState.user.Perfil === 'ROLE_ADMIN';\n\n  useEffect(() => {\n    try {\n      const token = tokenService.getToken();\n      if (token) {\n        const user = TokenService.decodeToken<ITokenData>(token)\n        dispatch({ type: SET_USER, user })\n      }\n    } catch (error) {\n      console.error('fail to get and decode token', error)\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            {\n              !isLoggedIn ? <Redirect to=\"/login\" /> :\n                isAdmin ? <Admin /> : <Client />\n            }\n          </Route>\n          <Route path=\"/login\">\n            {\n              !isLoggedIn ? <Login /> : <Redirect to=\"/\" />\n            }\n          </Route>\n          <Route path=\"/operations\">\n            {\n              !isLoggedIn ? <Login /> : <Operations />\n            }\n          </Route>\n          <Route path=\"/receipt\" >\n            {\n              !isLoggedIn ? <Login /> : <Receipt />\n            }\n          </Route>\n          <Route path=\"/rewards\">\n            {\n              !isLoggedIn ? <Login /> : <Rewards />\n            }\n          </Route>\n          <Route path=\"*\" component={Error} />\n        </Switch>\n        <ToastContainer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { AppContextProvider } from './AppContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContextProvider>\n      <App />\n    </AppContextProvider>\n  </React.StrictMode>\n  ,document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.b0c2dbc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/beer-tech-logo.e20b6b8e.png\";","module.exports = __webpack_public_path__ + \"static/media/transfer.390b5219.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.7a809f5c.svg\";","module.exports = __webpack_public_path__ + \"static/media/admin.e0b4c0ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/client.1cad8013.svg\";","module.exports = __webpack_public_path__ + \"static/media/tap-beer.91f38c68.mp4\";","module.exports = __webpack_public_path__ + \"static/media/beer-image.6ba2a92b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/operations.4acaec57.svg\";","module.exports = __webpack_public_path__ + \"static/media/receipt.8c2c7ec7.svg\";","module.exports = __webpack_public_path__ + \"static/media/rewards.19c1477d.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.36f0f834.svg\";"],"sourceRoot":""}